from .entrance_class import DeathsDoorEntrance
from ..rule_builder_overrides import Has
from ..items import DeathsDoorItemName as I
from ..regions import DeathsDoorRegionName as R

door_location_entrances: list[DeathsDoorEntrance] = [
    # Door Check regions
    DeathsDoorEntrance(
        R.DOOR_TO_GROVE_OF_SPIRITS,
        R.DOOR_CHECK_FOR_GROVE_OF_SPIRITS,
        Has(I.GROVE_OF_SPIRITS_DOOR),
        no_jefferson=True,
    ),  # not needed for now (see Hall of Doors Lobby connection below)
    DeathsDoorEntrance(
        R.GROVE_OF_SPIRITS_DOOR,
        R.DOOR_CHECK_FOR_GROVE_OF_SPIRITS,
        None,
        no_jefferson=True,
    ),  # Not needed because Hall of Doors Lobby connection below
    DeathsDoorEntrance(
        R.HALL_OF_DOORS_LOBBY,
        R.DOOR_CHECK_FOR_GROVE_OF_SPIRITS,
        None,
        no_jefferson=True,
    ),  ## Grants on first cutscene
    DeathsDoorEntrance(
        R.DOOR_TO_LOST_CEMETERY,
        R.DOOR_CHECK_FOR_LOST_CEMETERY,
        Has(I.LOST_CEMETERY_DOOR),
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.LOST_CEMETERY_CENTRAL,
        R.DOOR_CHECK_FOR_LOST_CEMETERY,
        None,
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.DOOR_TO_ESTATE_OF_THE_URN_WITCH,
        R.DOOR_CHECK_FOR_ESTATE_OF_THE_URN_WITCH,
        Has(I.ESTATE_OF_THE_URN_WITCH_DOOR),
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.ESTATE_OF_THE_URN_WITCH_SOUTH,
        R.DOOR_CHECK_FOR_ESTATE_OF_THE_URN_WITCH,
        None,
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.DOOR_TO_CERAMIC_MANOR,
        R.DOOR_CHECK_FOR_CERAMIC_MANOR,
        Has(I.CERAMIC_MANOR_DOOR),
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.CERAMIC_MANOR_MAIN_LOBBY,
        R.DOOR_CHECK_FOR_CERAMIC_MANOR,
        None,
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.DOOR_TO_INNER_FURNACE,
        R.DOOR_CHECK_FOR_INNER_FURNACE,
        Has(I.INNER_FURNACE_DOOR),
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.INNER_FURNACE_ENTRANCE,
        R.DOOR_CHECK_FOR_INNER_FURNACE,
        None,
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.DOOR_TO_URN_WITCHS_LABORATORY,
        R.DOOR_CHECK_FOR_URN_WITCHS_LABORATORY,
        Has(I.THE_URN_WITCHS_LABORATORY_DOOR),
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.URN_WITCHS_LABORATORY,
        R.DOOR_CHECK_FOR_URN_WITCHS_LABORATORY,
        None,
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.DOOR_TO_OVERGROWN_RUINS,
        R.DOOR_CHECK_FOR_OVERGROWN_RUINS,
        Has(I.OVERGROWN_RUINS_DOOR),
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.OVERGROWN_RUINS_OUTSIDE_MAIN_DUNGEON_GATE,
        R.DOOR_CHECK_FOR_OVERGROWN_RUINS,
        None,
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.DOOR_TO_MUSHROOM_DUNGEON,
        R.DOOR_CHECK_FOR_MUSHROOM_DUNGEON,
        Has(I.MUSHROOM_DUNGEON_DOOR),
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.MUSHROOM_DUNGEON_LOBBY,
        R.DOOR_CHECK_FOR_MUSHROOM_DUNGEON,
        None,
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.DOOR_TO_FLOODED_FORTRESS,
        R.DOOR_CHECK_FOR_FLOODED_FORTRESS,
        Has(I.FLOODED_FORTRESS_DOOR),
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.FLOODED_FORTRESS_FROG_KING_ENCOUNTER,
        R.DOOR_CHECK_FOR_FLOODED_FORTRESS,
        None,
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.DOOR_TO_THRONE_OF_THE_FROG_KING,
        R.DOOR_CHECK_FOR_THRONE_OF_THE_FROG_KING,
        Has(I.THRONE_OF_THE_FROG_KING_DOOR),
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.THRONE_OF_THE_FROG_KING,
        R.DOOR_CHECK_FOR_THRONE_OF_THE_FROG_KING,
        None,
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.DOOR_TO_STRANDED_SAILOR,
        R.DOOR_CHECK_FOR_STRANDED_SAILOR,
        Has(I.STRANDED_SAILOR_DOOR),
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.STRANDED_SAILOR, R.DOOR_CHECK_FOR_STRANDED_SAILOR, None, no_jefferson=True
    ),
    DeathsDoorEntrance(
        R.DOOR_TO_CASTLE_LOCKSTONE,
        R.DOOR_CHECK_FOR_CASTLE_LOCKSTONE,
        Has(I.CASTLE_LOCKSTONE_DOOR),
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.DOOR_TO_CAMP_OF_THE_FREE_CROWS,
        R.DOOR_CHECK_FOR_CAMP_OF_THE_FREE_CROWS,
        Has(I.CAMP_OF_THE_FREE_CROWS_DOOR),
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.CAMP_OF_THE_FREE_CROWS_CASTLE_DOOR,
        R.DOOR_CHECK_FOR_CAMP_OF_THE_FREE_CROWS,
        Has(I.CAMP_OF_THE_FREE_CROWS_DOOR),
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.DOOR_TO_OLD_WATCHTOWERS,
        R.DOOR_CHECK_FOR_OLD_WATCHTOWERS,
        Has(I.OLD_WATCHTOWERS_DOOR),
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.OLD_WATCHTOWERS_ENTRANCE,
        R.DOOR_CHECK_FOR_OLD_WATCHTOWERS,
        None,
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.DOOR_TO_BETTYS_LAIR,
        R.DOOR_CHECK_FOR_BETTYS_LAIR,
        Has(I.BETTYS_LAIR_DOOR),
        no_jefferson=True,
    ),
    DeathsDoorEntrance(
        R.BETTYS_LAIR,
        R.DOOR_CHECK_FOR_BETTYS_LAIR,
        None,
        no_jefferson=True,
    ),
]
